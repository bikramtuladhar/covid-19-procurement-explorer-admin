name: CI
on: [push, pull_request]
env:
  BASEDIR: https://raw.githubusercontent.com/open-contracting/standard-maintenance-scripts/main
jobs:
  build:
    runs-on: ubuntu-18.04
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432/tcp
      rabbitmq:
        image: rabbitmq:latest
        options: >-
          --health-cmd "rabbitmqctl node_health_check"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5672/tcp
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: 3.6
    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements_dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    # Check requirements.txt contains production requirements.
    - run: pip install -r requirements.txt
    - run: ./manage.py --help
    - run: pip install -r requirements_dev.txt
    - run: |
        ./manage.py migrate
        ./manage.py makemigrations --check --dry-run
        ./manage.py check --fail-level WARNING
        ./manage.py loaddata country redflag equitycategory equitykeywords
        coverage run --source content,country,covidadmin,vizualization,country/management/commands manage.py test --keepdb
      env:
        DB_NAME: postgres
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_PORT: ${{ job.services.postgres.ports[5432] }}
        CELERY_BROKER_URL: amqp://localhost:${{ job.services.rabbitmq.ports[5672] }}
      if: always()
    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: coveralls --service=github
